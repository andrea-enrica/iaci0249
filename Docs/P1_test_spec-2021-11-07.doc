<!DOCTYPE HTML>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/><title>testspec Proiect1 - iaci0249_BBT</title>
<link type="text/css" rel="stylesheet" href="http://localhost/testlink/gui/themes/default/css/tl_documents.css" />
<style type="text/css" media="print">.notprintable { display:none;}</style>
</head>
<body>
<div>
<div style="float:right;">TestLink Community [configure $tlCfg-&gt;document_generator-&gt;company_name]</div>
<div>&nbsp;</div><hr />
<p style="text-align: center;"><img alt="TestLink logo" title="configure using $tlCfg->document_generator->company_logo"  width=231 height=56 src="http://localhost/testlink/gui/themes/default/images/tl-logo-transparent-25.png" /></p></div>
<div class="doc_title"><p>Test Specification</p></div>
<div class="doc_title" style="text-align:left;margin: auto;"><p>Test Project: Proiect1<br/>Test Suite: Proiect1 - iaci0249_BBT</p></div>
<div class="summary"><p id="printedby">Printed by TestLink on 07/11/2021</p></div>
<div class="pagefooter" id="copyright">2012 &copy; TestLink Community</div>
<h1 class="general" style="page-break-before: always">Table Of Contents</h1><div class="toc"><p style="padding-left: 20px;"><b><a href="#toc_1">1.iaci0249_BBT</a></b></p>
<p style="padding-left: 45px;"><a href="#toc_tc8365">P1-22: TC1_BBT</a></p><p style="padding-left: 45px;"><a href="#toc_tc8367">P1-23: TC2_BBT</a></p></div><a name='toc_1'></a>
<h1 class='doclevel'>1.Test Suite : iaci0249_BBT</h1>
<div><p>Se testeaza adaugarea angajatului</p>
</div><a name="toc_tc8365"></a><p>&nbsp;</p><div> <table class="tc" width="90%" ><tr><th colspan="4">Test Case P1-22: TC1_BBT&nbsp;<span style="font-size: 80%;">[Version  : 1]</span></th></tr>
<tr><td width="20%" valign="top"><span class="label">Author:</span></td><td colspan="3">iaci0249</td></tr>
<tr><td colspan="4"><span class="label">Summary:</span><br /><p>Se testeaza adaugarea unui employee valid. Lista de angajati ar trebui sa creasca cu o unitate.</p>
</td></tr><tr><td colspan="4"><span class="label">Preconditions:</span><br /><p>employee = new Employee(); employeeMock = new EmployeeMock(); employee.setEmployeeId(1); employee.setFirstName(&quot;Mihai&quot;); employee.setLastName(&quot;Popescu&quot;); employee.setCnp(&quot;1871201335470&quot;); employee.setFunction(DidacticFunction.ASISTENT); employee.setSalary(3500d); employeesNumber = employeeMock.getEmployeeList().size();</p>
</td></tr><tr><td width="20%" valign="top"><span class="label">Execution type:</span></td><td colspan="3">Automated</td></tr>
<tr><td width="20%" valign="top"><span class="label">Estimated exec. duration (min):</span></td><td colspan="3"></td></tr>
<tr><td width="20%" valign="top"><span class="label">Importance:</span></td><td colspan="3">Medium</td></tr>
<tr><td colspan="4"></td></tr><tr><td > name of the autotest class:</td><td  colspan = "3" >AngajatiApp.repository.EmployeeMockTest</td></tr>
<tr><td > name of the test method:</td><td  colspan = "3" >AngajatiApp.repository.EmployeeMockTest#addEmployeeTC1</td></tr>
<tr><td width="20%" valign="top"><span class="label">Requirements</span><td colspan="3">iaci0249_Req01:  AdaugareAngajat [Version : 1]<br /></td></tr>
<tr><td width="20%" valign="top"><span class="label">Keywords:</span></td><td colspan="3">&nbsp;None<br/></td></tr>
</table>
</div>
<a name="toc_tc8367"></a><p>&nbsp;</p><div> <table class="tc" width="90%" ><tr><th colspan="4">Test Case P1-23: TC2_BBT&nbsp;<span style="font-size: 80%;">[Version  : 1]</span></th></tr>
<tr><td width="20%" valign="top"><span class="label">Author:</span></td><td colspan="3">iaci0249</td></tr>
<tr><td colspan="4"><span class="label">Summary:</span><br /><p>Se testeaza adaugarea unui angajat invalid, avand o valoare negativa asociata salariului. Angajatul nu ar trebui sa se adauge, iar lista de angajati ar trebui sa aiba aceeasi lungime.</p>
</td></tr><tr><td colspan="4"><span class="label">Preconditions:</span><br /><pre>
employee = new Employee();
employeeMock = new EmployeeMock();
employee.setEmployeeId(2);
employee.setFirstName(&quot;Mihai&quot;);
employee.setLastName(&quot;Popescu&quot;);
employee.setCnp(&quot;1871201335470&quot;);
employee.setFunction(DidacticFunction.ASISTENT);
employee.setSalary(-1d);
employeesNumber = employeeMock.getEmployeeList().size();</pre>
</td></tr><tr><td width="20%" valign="top"><span class="label">Execution type:</span></td><td colspan="3">Automated</td></tr>
<tr><td width="20%" valign="top"><span class="label">Estimated exec. duration (min):</span></td><td colspan="3"></td></tr>
<tr><td width="20%" valign="top"><span class="label">Importance:</span></td><td colspan="3">Medium</td></tr>
<tr><td colspan="4"></td></tr><tr><td > name of the autotest class:</td><td  colspan = "3" >AngajatiApp.repository.EmployeeMockTest</td></tr>
<tr><td > name of the test method:</td><td  colspan = "3" >AngajatiApp.repository.EmployeeMockTest#addEmployeeTC2</td></tr>
<tr><td width="20%" valign="top"><span class="label">Requirements</span><td colspan="3">iaci0249_Req01:  AdaugareAngajat [Version : 1]<br /></td></tr>
<tr><td width="20%" valign="top"><span class="label">Keywords:</span></td><td colspan="3">&nbsp;None<br/></td></tr>
</table>
</div>

</body>
</html>